<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +l/ly91vO7OKNwAAAABJRU5ErkJggg==
</value>
  </data>
</root>